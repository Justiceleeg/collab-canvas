rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function - user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function - user is the owner/locker of the object
    function isOwnerOrUnlocked() {
      return !resource.data.keys().hasAny(['lockedBy']) ||
             resource.data.lockedBy == null ||
             resource.data.lockedBy == request.auth.uid;
    }
    
    // Canvas objects - authenticated users can read/write
    match /canvasObjects/{objectId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && isOwnerOrUnlocked();
      allow delete: if isAuthenticated();
    }
    
    // Test collection - allow all for connection testing (can be removed in production)
    match /test/{testDoc} {
      allow read, write: if true;
    }
  }
}

